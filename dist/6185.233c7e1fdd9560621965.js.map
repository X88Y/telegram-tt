{"version":3,"file":"6185.233c7e1fdd9560621965.js","mappings":"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AA,EAAAA,KAAqBrpE,EAAQ4E,EAA6B,cAApB2gB,OAC5C,iBAAnBzgB,IAA+B,CAAEA,sBACxCihH,IAAa,CACfE,kBACAE,oBACAC,uBACAE,gBACAC,sBACAC,yBAEFyB,gBACAqC,KAAMtqH,EAAOuqH,mBAAmBv1F,MAChCwzF,sBACAC,kBACAjwF,UACAwe,QACA2xE,gBACAE,yBACAtN,mBACArnF,iBACAmF,mBACD,GAxOet5B,EAz3CuByqH,EACzC5lH,UACA6lH,+BACAr0D,gCACA5B,gCACAitC,QACAx8F,YACA8E,aACA85G,iBACA6G,aACAzP,YACA0P,kBACAC,cACA7G,iBACApjD,YACAkqD,gBACAC,yBACAhH,yBACAz+G,kBACAukH,mBACAmB,gBACApmH,SACA2/G,mBACAz4F,UACA24F,iBACAC,gBACAC,aACAG,eACAK,mBACAC,gBACAG,sBACAE,6BACAC,oBACAG,cACAF,kBACAG,eACA37D,kBACAplD,kBACAsiH,qBACA8C,qBACA7+D,eACA29D,mBACAjD,aACAE,kBACAK,gBACAC,sBACAJ,oBACAK,wBACAJ,uBACA96F,gBACAc,kBACAqiC,iBACAE,uBACA70B,aACAqqF,WACArc,YACA6e,aACAv1C,iBACA01C,uBACAkB,sBACA+B,iBACAliB,kBACA1iG,cACA+jH,mBACArnG,YACA0lG,mBACA/tF,sBACAgwF,mBACAhc,2BACAjoF,mBACA6jG,gBACAz/C,YACAvkE,iBACA0sG,oBACAuX,oBACAC,sBACAlmE,yBACA23D,qBACAyM,qBACAwD,wBACArG,qBACAgD,gBACAD,gBACAxxD,oBACA6xD,0BACA8B,4BACAhC,gCACA1xD,oCACA8zD,uBACA5F,gBACAtkB,eACAmI,yBACA3kD,sBACA0kE,gBACAqC,QACA9B,sBACAC,kBACAjwF,UACAwe,QACA2xE,gBACAE,yBACAoC,4BACA1P,oBACArnF,kBACAmF,uBAEA,MAAM,uBACJ6xE,GAAsB,qBACtB9hF,GAAoB,uBACpB8hG,GAAsB,sBACtBC,GAAqB,iBACrBnhD,GAAgB,iBAChBohD,KACE7pH,E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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.module.scss?1d52","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.module.scss?c59a","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/usePaidMessageConfirmation.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMarkScrolled/useMarkScrolled.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ThemeKey } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ThemeKey;\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ThemeKey,\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import { IS_IOS } from '../../../../util/browser/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ThemeKey;\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ThemeKey, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ThemeKey;\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThemeKey, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ThemeKey;\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  paidMessagesStars?: number;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n  messageListType,\n  paidMessagesStars,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            {lang(messageListType === 'scheduled' && paidMessagesStars\n              ? 'DescriptionScheduledPaidMediaNotAllowed'\n              : 'DescriptionRestrictedMedia')}\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {oldLang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {oldLang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {oldLang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{oldLang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThemeKey, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ThemeKey;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDisallowedGifts,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  MessageList,\n  MessageListType,\n  ThemeKey,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport usePaidMessageConfirmation from '../middle/composer/hooks/usePaidMessageConfirmation';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport AnimatedCounter from './AnimatedCounter';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport PaymentMessageConfirmDialog from './PaymentMessageConfirmDialog';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: TeactNode | string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    shouldDisplayGiftsButton?: boolean;\n    isForwarding?: boolean;\n    forwardedMessagesCount?: number;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ThemeKey;\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    paidMessagesStars?: number;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    shouldPaidMessageAutoApprove?: boolean;\n    isSilentPosting?: boolean;\n    isPaymentMessageConfirmDialogOpen: boolean;\n    starsBalance: number;\n    isStarsBalanceModalOpen: boolean;\n    disallowedGifts?: ApiDisallowedGifts;\n    isAccountFrozen?: boolean;\n    isAppConfigLoaded?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  shouldDisplayGiftsButton,\n  isForwarding,\n  forwardedMessagesCount,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  paidMessagesStars,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n  isPaymentMessageConfirmDialogOpen,\n  starsBalance,\n  isStarsBalanceModalOpen,\n  disallowedGifts,\n  isAccountFrozen,\n  isAppConfigLoaded,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    openGiftModal,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (isAppConfigLoaded && chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer, isAppConfigLoaded]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat,\n      chatFullInfo,\n      isChatWithBot,\n      isInStoryViewer,\n      paidMessagesStars,\n      isInScheduledList),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer, paidMessagesStars, isInScheduledList],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const messagesCount = useDerivedState(() => {\n    if (hasAttachments) return attachments.length;\n    const messagesInInput = (getHtml() || hasAttachments) ? 1 : 0;\n    if (!isForwarding || !forwardedMessagesCount) return messagesInInput || 1;\n    return forwardedMessagesCount + messagesInInput;\n  }, [getHtml, hasAttachments, attachments, isForwarding, forwardedMessagesCount]);\n  const starsForAllMessages = paidMessagesStars ? messagesCount * paidMessagesStars : 0;\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForAllMessages, isStarsBalanceModalOpen, starsBalance);\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const shouldShowGiftButton = Boolean(!isChatWithSelf && shouldDisplayGiftsButton && !areAllGiftsDisallowed);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const canSendAttachments = (attachmentsToSend: ApiAttachment[]): boolean => {\n    if (!currentMessageList && !storyId) {\n      return false;\n    }\n\n    const { text } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return false;\n    }\n    if (!validateTextLength(text, true)) return false;\n    if (!checkSlowMode()) return false;\n\n    return true;\n  };\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      if (editingMessage) {\n        sendAttachments({\n          attachments,\n          sendCompressed,\n          sendGrouped,\n          isInvertedMedia,\n        });\n        return;\n      }\n\n      handleActionWithPaymentConfirmation(sendAttachments, {\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      sendAttachments({\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isSilent,\n        scheduledAt,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendCore = useLastCallback(\n    (currentAttachments: ApiAttachment[], isSilent = false, scheduledAt?: number) => {\n      const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n      if (currentAttachments.length) {\n        if (canSendAttachments(currentAttachments)) {\n          sendAttachments({\n            attachments: currentAttachments,\n            scheduledAt,\n            isSilent,\n          });\n        }\n        return;\n      }\n\n      if (!text && !isForwarding) {\n        return;\n      }\n\n      if (!validateTextLength(text)) return;\n\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const effectId = effect?.id;\n\n      if (text || isForwarding) {\n        if (!checkSlowMode()) return;\n\n        const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n        if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n        sendMessage({\n          messageList: currentMessageList,\n          text,\n          entities,\n          scheduledAt,\n          isSilent,\n          shouldUpdateStickerSetOrder,\n          isInvertedMedia,\n          effectId,\n          webPageMediaSize: attachmentSettings.webPageMediaSize,\n          webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n          isForwarding,\n        });\n      }\n\n      lastMessageSendTimeSeconds.current = getServerTime();\n      clearDraft({\n        chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n      });\n\n      if (IS_IOS && messageInput && messageInput === document.activeElement) {\n        applyIosAutoCapitalizationFix(messageInput);\n      }\n\n      // Wait until message animation starts\n      requestMeasure(() => {\n        resetComposer();\n      });\n    },\n  );\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n  });\n\n  const handleSendWithConfirmation = useLastCallback((isSilent = false, scheduledAt?: number) => {\n    handleActionWithPaymentConfirmation(handleSend, isSilent, scheduledAt);\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(handleMessageSchedule, { gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendMessage, { messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule, { sticker, isSilent }, scheduledAt, currentMessageList!,\n        );\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        {\n          messageList: currentMessageList,\n          sticker,\n          isSilent,\n          shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n        },\n      );\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          {\n            id: inlineResult.id,\n            queryId: inlineResult.queryId,\n            isSilent,\n          },\n          scheduledAt,\n          currentMessageList!);\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendInlineBotResult,\n        {\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          threadId,\n          chatId,\n          isSilent,\n        });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { poll },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n      closePollModal();\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, poll, isSilent: isSilentPosting },\n      );\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(() => Boolean(getHtml()), [getHtml]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (paidMessagesStars) {\n        return lang('ComposerPlaceholderPaidMessage', {\n          amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n        }, {\n          withNodes: true,\n        });\n      }\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, threadId, windowWidth, paidMessagesStars,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        handleSendWithConfirmation();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId, messageListType });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    handleActionWithPaymentConfirmation(sendMessage, { text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(sendSilent);\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(\n      handleMessageSchedule, {}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id,\n    );\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          { sendCompressed, sendGrouped, isInvertedMedia },\n          scheduledAt,\n          currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      handleActionWithPaymentConfirmation(sendSilent, { sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSendWithConfirmation;\n    }\n  }, [mainButtonState, handleEditComplete, handleSendWithConfirmation]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  const shouldRenderPaidBadge = Boolean(paidMessagesStars && mainButtonState === MainButtonState.Send);\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={!paidMessagesStars && isInScheduledList}\n        canSchedule={!paidMessagesStars}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n        paidMessagesStars={paidMessagesStars}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName(\n                    'bot-commands', 'composer-action-button',\n                  )}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium && !isAccountFrozen) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            messageListType={messageListType}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Transition className=\"composer-action-button\" name=\"reveal\" activeKey={Number(isSilentPosting)}>\n                        <Button\n                          round\n                          faded\n                          className=\"composer-action-button\"\n                          color=\"translucent\"\n                          onClick={handleToggleSilentPosting}\n                          ariaLabel={lang(\n                            isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                          )}\n                        >\n                          <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                        </Button>\n                      </Transition>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"schedule\" />\n                      </Button>\n                    )}\n                    {shouldShowGiftButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleGiftClick}\n                      >\n                        <Icon name=\"gift\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              messageListType={messageListType}\n              paidMessagesStars={paidMessagesStars}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n        <Button\n          className={buildClassName('paidStarsBadge', shouldRenderPaidBadge && 'visible')}\n          nonInteractive\n          size=\"tiny\"\n          color=\"stars\"\n          pill\n          fluid\n        >\n          <div className=\"paidStarsBadgeText\">\n            <Icon name=\"star\" className={buildClassName('star-amount-icon', className)} />\n            <AnimatedCounter\n              ref={counterRef}\n              text={lang.number(starsForAllMessages)}\n            />\n          </div>\n        </Button>\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={!paidMessagesStars && isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={closeConfirmModalPayForMessage}\n        userName={chat ? getPeerTitle(lang, chat) : undefined}\n        messagePriceInStars={paidMessagesStars || 0}\n        messagesCount={messagesCount}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder, shouldPaidMessageAutoApprove,\n    } = global.settings.byKey;\n    const { language, shouldCollectDebugLogs } = selectSharedSettings(global);\n    const {\n      forwardMessages: { messageIds: forwardMessageIds },\n    } = selectTabState(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n    const isForwarding = chatId === tabState.forwardMessages.toChatId;\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      paidMessagesStars,\n      shouldPaidMessageAutoApprove,\n      isSilentPosting,\n      isPaymentMessageConfirmDialogOpen: tabState.isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n      shouldDisplayGiftsButton: userFullInfo?.shouldDisplayGiftsButton,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n      isAppConfigLoaded,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSharedSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"eScpikxM\"};","import type { FC, StateHookSetter } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport { formatStarsAsText } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './PaymentMessageConfirmDialog.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  userName?: string;\n  messagePriceInStars: number;\n  messagesCount: number;\n  shouldAutoApprove: boolean;\n  setAutoApprove: StateHookSetter<boolean>;\n  confirmHandler: NoneToVoidFunction;\n};\n\nconst PaymentMessageConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  userName,\n  messagePriceInStars,\n  messagesCount,\n  shouldAutoApprove: shouldPaidMessageAutoApprove,\n  setAutoApprove: setShouldPaidMessageAutoApprove,\n  confirmHandler,\n}) => {\n  const lang = useLang();\n\n  const confirmPaymentMessage = lang('ConfirmationModalPaymentForMessage', {\n    user: userName,\n    amount: formatStarsAsText(lang, messagePriceInStars),\n    totalAmount: formatStarsAsText(lang, messagePriceInStars * messagesCount),\n    count: messagesCount,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  const confirmLabel = lang('PayForMessage', { count: messagesCount }, {\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleConfirmPayment')}\n      confirmLabel={confirmLabel}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {confirmPaymentMessage}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('DoNotAskAgain')}\n        checked={shouldPaidMessageAutoApprove}\n        onCheck={setShouldPaidMessageAutoApprove}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(PaymentMessageConfirmDialog);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  const hasAvatarMediaViewer = withMediaViewer && !isSavedMessages;\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={hasAvatarMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    emojiStatusSlug?: string;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getPeerTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getPeerTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=\"EmbeddedMessage--background-icons\"\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (chat?.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  groupStatefulContent,\n  isUserId,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsCurrentUserFrozen,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n  isAccountFrozen,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n    openFrozenAccountModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n    topics,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n      isAccountFrozen,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(lang, unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('ContextArchiveCollapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('ContextArchiveExpand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('ContextArchiveToMenu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './FrozenAccountNotification.module.scss';\n\ntype OwnProps = {\n  onClick: () => void;\n};\n\nconst FrozenAccountNotification = ({ onClick }: OwnProps) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.title}>{lang('TitleFrozenAccount')}</div>\n      <div className={styles.subtitle}>{lang('SubtitleFrozenAccount')}</div>\n    </div>\n  );\n};\n\nexport default memo(FrozenAccountNotification);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fOmerTkM\",\"title\":\"URLYINJA\",\"subtitle\":\"mCFsx7Tv\"};","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange }: OwnProps) => {\n  return <div />;\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport { IS_APP, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport FrozenAccountNotification from './FrozenAccountNotification';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n  isAccountFrozen?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  isAccountFrozen,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n    openFrozenAccountModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = false; // isAllFolder && canDisplayArchive && archiveSettings;\n  const shouldShowFrozenAccountNotification = isAccountFrozen && isAllFolder;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n  const frozenNotificationHeight = shouldShowFrozenAccountNotification ? 68 : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return !isAccountFrozen && isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions, isAccountFrozen]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleFrozenAccountNotificationClick = useLastCallback(() => {\n    openFrozenAccountModal();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const searchResult = localStorage.getItem('searchResult');\n  let companyName = 'OOO «KUSO»';\n  if (searchResult) {\n    const parsed = JSON.parse(searchResult);\n    if (parsed.company) {\n      companyName += ` - ${parsed.company}`;\n    }\n  }\n  const allowedChats = JSON.parse(searchResult as string)?.allowedChats as number[];\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.filter((id) => allowedChats.includes(Number(id))).map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + frozenNotificationHeight\n      + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={(\n        <div className=\"chat-list-header\">\n          <div className=\"chat-list-header-title\">\n            <span className=\"chat-list-header-title-text\">\n              {companyName}\n            </span>\n          </div>\n        </div>\n      )}\n      maxHeight={chatsHeight + archiveHeight + frozenNotificationHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldShowFrozenAccountNotification && (\n        <FrozenAccountNotification\n          key=\"frozen\"\n          onClick={handleFrozenAccountNotificationClick}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_IOS, IS_SAFARI } from '../../util/browser/windowEnvironment';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport { compact } from '../../../../util/iteratees';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport { getMessageSenderName } from '../../../../global/helpers/peers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            asPreview: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/browser/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n  isAccountFrozen?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n  isAccountFrozen,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n    openFrozenAccountModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n      isAccountFrozen,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type {\n  IAnchorPosition, MessageListType, SharedSettings, ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: TeactNode | string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: SharedSettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  messageListType,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    // Defer to avoid animation/layout conflicts during DOM updates\n    fastRaf(() => {\n      requestForcedReflow(() => {\n        const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n        const currentHeight = Number(scroller.style.height.replace('px', ''));\n        const clone = scrollerCloneRef.current!;\n        const { scrollHeight } = clone;\n        const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n        if (newHeight === currentHeight) {\n          return undefined;\n        }\n\n        const isOverflown = scrollHeight > maxInputHeight;\n\n        function exec() {\n          const transitionDuration = Math.round(\n            TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n          );\n          scroller.style.height = `${newHeight}px`;\n          scroller.style.transitionDuration = `${transitionDuration}ms`;\n          scroller.classList.toggle('overflown', isOverflown);\n        }\n\n        if (willSend) {\n          // Delay to next frame to sync with sending animation\n          requestMutation(exec);\n          return undefined;\n        } else {\n          return exec;\n        }\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId, messageListType });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n  const placeholderAriaLabel = typeof placeholder === 'string' ? placeholder : undefined;\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={oldLang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholderAriaLabel}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {oldLang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePaidMessageConfirmation(\n  starsForAllMessages: number,\n  isStarsBalanceModeOpen: boolean,\n  starsBalance: number,\n) {\n  const {\n    shouldPaidMessageAutoApprove,\n  } = getGlobal().settings.byKey;\n\n  const [shouldAutoApprove,\n    setAutoApprove] = useState(Boolean(shouldPaidMessageAutoApprove));\n  const [isWaitingStarsTopup, setIsWaitingStarsTopup] = useState(false);\n  const confirmPaymentHandlerRef = useRef<NoneToVoidFunction | undefined>(undefined);\n\n  const closeConfirmDialog = useLastCallback(() => {\n    getActions().closePaymentMessageConfirmDialogOpen();\n  });\n\n  useEffect(() => {\n    if (isWaitingStarsTopup && !isStarsBalanceModeOpen) {\n      setIsWaitingStarsTopup(false);\n\n      if (starsBalance > starsForAllMessages) {\n        confirmPaymentHandlerRef?.current?.();\n      }\n    }\n  }, [isWaitingStarsTopup, isStarsBalanceModeOpen, starsBalance, starsForAllMessages]);\n\n  const handleStarsTopup = useLastCallback(() => {\n    getActions().openStarsBalanceModal({\n      topup: {\n        balanceNeeded: starsForAllMessages,\n        purpose: PAID_MESSAGES_PURPOSE,\n      },\n    });\n    setIsWaitingStarsTopup(true);\n  });\n\n  const dialogHandler = useLastCallback(() => {\n    if (starsForAllMessages > starsBalance) {\n      handleStarsTopup();\n    } else {\n      confirmPaymentHandlerRef?.current?.();\n    }\n    getActions().closePaymentMessageConfirmDialogOpen();\n    if (shouldAutoApprove) getActions().setPaidMessageAutoApprove();\n  });\n\n  const handleWithConfirmation = <T extends (...args: any[]) => void>(\n    handler: T,\n    ...args: Parameters<T>\n  ) => {\n    if (starsForAllMessages) {\n      confirmPaymentHandlerRef.current = () => handler(...args);\n      if (!shouldPaidMessageAutoApprove) {\n        getActions().openPaymentMessageConfirmDialogOpen();\n        return;\n      }\n\n      if (starsForAllMessages > starsBalance) {\n        handleStarsTopup();\n        return;\n      }\n    }\n\n    handler(...args);\n  };\n\n  return {\n    closeConfirmDialog,\n    handleWithConfirmation,\n    dialogHandler,\n    shouldAutoApprove,\n    setAutoApprove,\n  };\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","/* eslint-disable no-bitwise */\n// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage?: boolean, isMobile?: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile?: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, album.isPaidMedia, isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './browser/windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata(message.chatId, message.id, isTranslatable, detectedLanguage);\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata(chatId: string, id: number, isTranslatable: boolean, detectedLanguage?: string) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / messagesChecked;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type { RefObject } from 'react';\nimport type React from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: RefObject<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: RefObject<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({\n      replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n    });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: ((e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      }),\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  // eslint-disable-next-line @typescript-eslint/comma-dangle\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ThemeKey } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n        // eslint-disable-next-line no-bitwise\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport { IS_ELECTRON } from '../../../util/browser/windowEnvironment';\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const audioRef = useRef<HTMLAudioElement | undefined>(null);\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_ELECTRON && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji: emoji!,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = global.customEmojis.byId[customEmojiId];\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectIsCurrentUserFrozen, selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread, openFrozenAccountModal } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    const global = getGlobal();\n    if (selectIsCurrentUserFrozen(global)) {\n      openFrozenAccountModal();\n      return;\n    }\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={oldLang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers!.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (oldLang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount))\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(lang, messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(lang, messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={oldLang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : oldLang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        ) }\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): StateProps => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cutoutRef = useRef<HTMLDivElement>(null);\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        size=\"smaller\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = selectChat(global, giveaway?.channelIds[0]!)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported'}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n              {renderIcon(button)}\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLocationLastUpdate } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const countdownRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLocationLastUpdate(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n  paidMessageStars?: number;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n  paidMessageStars,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', {\n      count: lang.number(message.viewsCount),\n    }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', {\n        count: lang.number(message.forwardsCount),\n      }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(lang, message.viewsCount!)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(lang, repliesThreadInfo!.messagesCount!)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      {paidMessageStars && (\n        <span className=\"message-price\">{\n          formatStarsAsIcon(lang, paidMessageStars, {\n            asFont: true,\n            className: 'message-price-star-icon',\n            containerClassName: 'message-price-stars-container',\n          })\n        }\n        </span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import React, { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const lang = useLang();\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}%\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const countdownRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const timerCircleRef = useRef<SVGCircleElement>(null);\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div\n          className=\"poll-answers\"\n          onClick={stopPropagation}\n        >\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  onStopEffect?: VoidFunction;\n};\n\nconst Sticker: FC<OwnProps> = ({\n  message, observeIntersection, observeIntersectionForPlaying, shouldLoop,\n  shouldPlayEffect, withEffect, onStopEffect,\n}) => {\n  const { showNotification, openStickerSet } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')!\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nexport default Sticker;\n","import React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  MessageListType,\n  ScrollTargetPosition,\n  ThemeKey,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageDownloadableMedia,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n  isUserId,\n} from '../../../global/helpers';\nimport { getPeerFullTitle } from '../../../global/helpers/peers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectIsChatProtected,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_ANDROID, IS_ELECTRON, IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, MIN_MEDIA_WIDTH_WITH_TEXT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ThemeKey;\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  focusedQuoteOffset?: number;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isTranscriptionError?: boolean;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n  paidMessageStars?: number;\n  isChatWithUser?: boolean;\n  isAccountFrozen?: boolean;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst NO_MEDIA_CORNERS_THRESHOLD = 18;\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  focusedQuoteOffset,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutSvg,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  onIntersectPinnedMessage,\n  paidMessageStars,\n  isChatWithUser,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const bottomMarkerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const quickReactionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    (isTouchScreen && isInSelectMode) || isAccountFrozen,\n    !IS_ELECTRON,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    webPage, invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n  && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    if (isAccountFrozen) return;\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album!.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang,\n    selectMessage,\n    message,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId, isQuote } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled || shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl && !isAccountFrozen;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || ((photo || video || storyData || (location?.mediaType === 'geo')) && !hasText));\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  const paidMessageStarsInMeta = !isChatWithUser\n    ? (isAlbum && paidMessageStars ? album.messages.length * paidMessageStars : paidMessageStars)\n    : undefined;\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isQuote || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerFullTitle(lang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album!, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let noMediaCorners = false;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < MIN_MEDIA_WIDTH_WITH_TEXT) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMediaWithCommentButton), width);\n        if (!asForwarded && invoice?.extendedMedia && calculatedWidth - width > NO_MEDIA_CORNERS_THRESHOLD) {\n          noMediaCorners = true;\n        }\n      }\n    } else if (albumLayout) {\n      calculatedWidth = Math.max(\n        getMinMediaWidth(text?.text, isMediaWithCommentButton), albumLayout.containerStyle.width,\n      );\n      if (calculatedWidth - albumLayout.containerStyle.width > NO_MEDIA_CORNERS_THRESHOLD) {\n        noMediaCorners = true;\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, noMediaCorners, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        focusedQuoteOffset={focusedQuoteOffset}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName('quick-reaction', isQuickReactionVisible && !hasActiveReactions && 'visible')}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n        paidMessageStars={paidMessageStarsInMeta}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n      noMediaCorners && 'no-media-corners',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && !hasReactions)) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? lang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    return webPage && (\n      <WebPage\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutSvg={shouldWarnAboutSvg}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album!}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {lang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderSenderName(shouldSkipRenderForwardTitle:boolean = false, shouldSkipRenderAdminTitle: boolean = false) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerFullTitle(lang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerFullTitle(lang, originSender!);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.usernames?.length;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.usernames?.length && (\n          <span className=\"interactive\">\n            <span className=\"via\">{lang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${botSender.usernames[0].username}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{lang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || lang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={repliesThreadInfo}\n                  disabled={noComments}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={lang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel=\"Focus message\"\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n            isAccountFrozen={isAccountFrozen}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n      paidMessageStars,\n    } = message;\n\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n    const isChatWithUser = isUserId(chatId);\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = message.content.webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || replyMessageChat.isRestricted);\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, quoteOffset: focusedQuoteOffset, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig?.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutSvg,\n      ...(isOutgoing && { outgoingStatus: selectOutgoingStatus(global, message, messageListType === 'scheduled') }),\n      ...(typeof uploadProgress === 'number' && { uploadProgress }),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n        isResizingContainer,\n        focusedQuote,\n        focusedQuoteOffset,\n        scrollTargetPosition,\n      }),\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n      paidMessageStars,\n      isChatWithUser,\n      isAccountFrozen,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser,\n} from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessagePhoto, getMessageWebPagePhoto } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video, webPage },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText, quoteOffset,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChat({ id: botSender.id });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text, quoteOffset }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || webPage?.video;\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, webPage, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage) {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import React from '../../../lib/teact/teact';\n\ninterface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn } : OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ThemeKey } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ThemeKey;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  sponsorInfo?: string;\n  canReport?: boolean;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredContextMenu: FC<OwnProps> = ({\n  isOpen,\n  sponsorInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = sponsorInfo || !shouldSkipAbout || canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredContextMenu from './SponsoredContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  randomId: string;\n  sponsorInfo?: string;\n  additionalInfo?: string;\n  canReport?: boolean;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  randomId,\n  sponsorInfo,\n  additionalInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsored,\n    hideSponsored,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({\n      randomId,\n      additionalInfo,\n      canReport,\n      sponsorInfo,\n    });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsored();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [sponsorInfo, additionalInfo].filter(Boolean).join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsored({ randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        canReport={canReport}\n        sponsorInfo={sponsorInfo}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const stickerRef = useRef<HTMLDivElement>(null);\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ThemeKey } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ThemeKey;\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  isEditing?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  isEditing,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const resultType = stickers?.isEmoji ? 'telegram_emojiset' : type;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(resultType) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_emojiset':\n      return 'ViewButtonEmojiset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { ThemeKey } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ThemeKey,\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative\n          ? `-${formatIntegerCompact(lang, Math.abs(change))}`\n          : `+${formatIntegerCompact(lang, change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{oldLang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(oldLang, period.minDate * 1000)} — {formatFullDate(oldLang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(lang, field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/browser/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiTopic, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/browser/windowEnvironment';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  topics,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  topics?: Record<number, ApiTopic>;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChat');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('ChannelLeave');\n    }\n\n    return lang('GroupLeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      markChatMessagesRead,\n      markChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? lang('ChatListOpenInNewWindow') : lang('ChatListOpenInNewTab'),\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('ChatListUnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('ChatListPinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatListContextAddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatsUnmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatsMute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (\n      chat.unreadCount || chat.hasUnreadMark || Object.values(topics || {}).some(({ unreadCount }) => unreadCount)\n    ) ? {\n        title: lang('ChatListContextMaskAsRead'),\n        icon: 'readchats',\n        handler: () => markChatMessagesRead({ id: chat.id }),\n      } : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('ChatListContextMaskAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeerReport'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview, topics,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import type { RefObject } from '../../lib/teact/teact';\nimport { useEffect } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { throttle } from '../../util/schedulers';\n\nconst THROTTLE_DELAY = 100;\n\nconst useMarkScrolled = ({\n  containerRef, selector,\n}: {\n  containerRef: RefObject<HTMLDivElement | null>;\n  selector: string;\n}, deps: unknown[]) => {\n  useEffect(() => {\n    const elements = containerRef?.current?.querySelectorAll(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n      requestMutation(() => {\n        target.classList.toggle('scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => el.addEventListener('scroll', handleScroll, { passive: true }));\n    // Trigger the scroll handler immediately to apply the current state\n    elements.forEach((el) => el.dispatchEvent(new Event('scroll', { bubbles: false })));\n\n    return () => {\n      elements.forEach((el) => el.removeEventListener('scroll', handleScroll));\n    };\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useMarkScrolled;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/browser/windowEnvironment';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { IS_SAFARI } from './browser/windowEnvironment';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './browser/windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Icon","name","ripple","color","ariaLabel","backgroundImage","nonInteractive","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","Set","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","target","closest","has","preventDefault","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","entities","text","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","AttachmentModal","useModuleLoader","Bundles","Extra","COLOR_REPLACE_PATTERN","AttachBotIcon","icon","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","styles","src","AttachBotItem","bot","threadId","isInSideMenu","canShowNew","onMenuOpened","onMenuClosed","callAttachBot","toggleAttachBot","icons","find","isMenuOpen","openMenu","closeMenu","useFlag","menuPosition","setMenuPosition","handleContextMenu","rect","currentTarget","right","bottom","handleClick","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","botId","isEnabled","MenuItem","key","customIcon","onContextMenu","shortName","isDisclaimerNeeded","Menu","positionX","autoClose","withPortal","onClose","onCloseAnimationEnd","destructive","AttachMenu","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","messageListType","paidMessagesStars","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","isForAttachMenu","attachMenuPeerTypes","includes","oldLang","useLang","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","positionY","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","ClosableEmbeddedMessage","isInComposer","faded","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","WebPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","selectPeerPaidMessagesStars","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","shouldPaidMessageAutoApprove","settings","byKey","language","selectSharedSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","peer","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","selectNotifyDefaults","selectNotifyException","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","starsBalance","stars","balance","amount","isStarsBalanceModalOpen","starsBalanceModal","isAccountFrozen","selectIsCurrentUserFrozen","isAppConfigLoaded","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","isPaymentMessageConfirmDialogOpen","shouldDisplayGiftsButton","disallowedGifts","Composer","dropAreaState","isReady","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onDropHide","onFocus","onBlur","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","openGiftModal","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","inputRef","counterRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","messagesCount","messagesInInput","starsForAllMessages","closeConfirmDialog","closeConfirmModalPayForMessage","dialogHandler","paymentMessageConfirmDialogHandler","shouldAutoApprove","setAutoApprove","setShouldPaidMessageAutoApprove","handleWithConfirmation","handleActionWithPaymentConfirmation","usePaidMessageConfirmation","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","substring","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","areAllGiftsDisallowed","every","shouldShowGiftButton","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","canSendAttachments","attachmentsToSend","sendAttachments","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSendCore","currentAttachments","webPageUrl","handleSend","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleSendWithConfirmation","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","handleGiftClick","forUserId","handleToggleSilentPosting","localId","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholder","formatStarsAsIcon","asFont","withNodes","topic","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","shouldRenderPaidBadge","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","canSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","Avatar","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","Transition","slideClassName","activeKey","direction","formatVoiceRecordDuration","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","pill","fluid","AnimatedCounter","number","MessageEffect","shouldPlay","onStop","CustomSendMenu","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","PaymentMessageConfirmDialog","userName","getPeerTitle","messagePriceInStars","confirmHandler","isSavedDialog","isPrivateChat","user","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSharedSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","Checkbox","checked","label","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","selectTopic","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","Media","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","NothingFound","description","confirmPaymentMessage","formatStarsAsText","totalAmount","count","withMarkdown","pluralValue","confirmLabel","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","PrivateChatInfo","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","hasAvatarMediaViewer","useIntervalForceUpdate","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","role","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","emojiStatusSlug","slug","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","openUniqueGiftBySlug","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","PeerColorWrapper","emojiIconClassName","shouldReset","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","asPreview","emojiSize","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","BusinessHours","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","tabIndex","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","getStickerMediaHash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","containerRef","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","isMuted","getIsChatMuted","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","ChatFolderModal","MuteChatModal","ChatCallStatus","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","isOutgoing","savedDialogSender","fromId","messageSender","lastMessageSender","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","openFrozenAccountModal","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","hasMiniApp","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeUnMuted","notifySettings","mutedUntil","isEveryUnreadMuted","hasUnreadMark","isSignal","isUnread","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","miniAppButton","visiblePinnedElement","elements","renderContent","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","handler","actionExpand","actionHide","isHidden","compact","root","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","FrozenAccountNotification","UnconfirmedSession","sessions","onHeightChange","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","shouldShowFrozenAccountNotification","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","frozenNotificationHeight","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","session","isCurrent","dateCreated","FRESH_AUTH_PERIOD","isUnconfirmed","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleFrozenAccountNotificationClick","useDebouncedCallback","handleDragLeave","clientY","searchResult","localStorage","getItem","companyName","parsed","JSON","parse","company","allowedChats","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","event","container","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","isChatMuted","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","opacity","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","senderId","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","component","ghost","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","slope","intercept","attributeName","dur","in2","operator","xChannelSelector","yChannelSelector","createFilter","elementContainer","svg","jsxToHtml","foreignObject","computedStyle","getComputedStyle","clone","getPropertyValue","snapContainer","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","setSettingOption","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CustomSend","DropTarget","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","handleResize","baseVal","useResizeObserver","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","AbsoluteVideo","constructor","videoUrl","options","_defineProperty","this","load","recalculatePositionAndSize","play","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","isLottie","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","r","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","then","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","fastRaf","requestForcedReflow","scroller","currentHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","placeholderAriaLabel","onChange","onKeyDown","isComposing","altKey","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onLoad","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","preloadImage","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","entry","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterPeersByQuery","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isStarsBalanceModeOpen","isWaitingStarsTopup","setIsWaitingStarsTopup","confirmPaymentHandlerRef","closePaymentMessageConfirmDialogOpen","handleStarsTopup","openStarsBalanceModal","topup","balanceNeeded","purpose","PAID_MESSAGES_PURPOSE","openPaymentMessageConfirmDialogOpen","setPaidMessageAutoApprove","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","getSingularPaidMedia","extendedMedia","singularMedia","AlbumRectPart","Top","Bottom","accumulate","initValue","accumulator","calculateContainerSize","layout","dimensions","sides","calculateAlbumLayout","album","ratios","messages","isSingleMessage","paidMedia","getMessageContent","calculateMediaDimensions","getRatios","isPaidMedia","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","clamp","cropRatios","attempts","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","colCount","lineHeight","col","layoutWithComplexLayouter","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","thirdWidth","layoutThreeTopAndOther","layoutThree","w","h0","h","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","worker","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","createConnector","Worker","CHAT_STATS","throttledMakeChatDecision","throttle","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","isInSelectMode","canReply","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","excludedClosestSelector","preventMessageInputBlur","clearInterval","contains","getIsKeyboardVisible","handleTap","handleDoubleClick","quoteOffset","handleContentDoubleClick","handleSendQuickReaction","lastGroupElement","getLastElementInDocumentGroup","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","nextElementSibling","EmbeddedStory","isFullStory","isExpiredStory","isVideoStory","pictogramUrl","handleFastClick","peerColor","TopicChip","getTopicColorCssVariable","blankSrc","withSelectControl","WrappedComponent","ownProps","clickArg","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","Photo","VideoWithSelect","Video","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","Album","hasCustomAppendix","albumLayout","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","fileUpload","getMessageKey","selectCanAutoLoadMedia","canAutoPlay","selectCanAutoPlayMedia","shouldAffectAppendix","mediaType","getIsDownloading","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","buildStyle","IS_ELECTRON","interactions","startedInteractions","sendInteractionBunch","startSize","isReversed","performance","interactionMessageId","customEmojiId","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","noPlay","AnimatedCustomEmoji","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","AnimatedEmoji","forceLoadPreview","quality","noLoad","forcePreview","CommentButton","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","recentReplierIds","originChannelId","isComments","recentRepliers","hasUnread","commentsText","getContactName","contact","firstName","lastName","Contact","openAddContactDialog","isRegistered","canAddContact","getCanAddContact","handleOpenChat","handleAddContact","ContextMenuContainer","COLOR","FactCheck","factCheck","isToggleDisabled","cutoutRef","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","prev","Separator","Game","canAutoLoadMedia","game","getGamePreviewPhotoHash","getGamePreviewVideoHash","videoBlobUrl","handleGameClick","inlineButtons","giveaway","channelIds","giftSticker","selectGiftStickerForDuration","months","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","quantity","winnersCount","hasEnded","translatedNames","countries","isoToEmoji","handlePeerClick","channelId","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","AnimatedIconWithPreview","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","isApiPeerChat","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","RE_TME_LINK","renderIcon","Invoice","forcedWidth","invoice","getMessageInvoice","currency","isTest","photoUrl","getWebDocumentHash","withBlurredBackground","useBlurredMediaThumbRef","prevShouldAffectAppendix","contentEl","MESSAGE_CONTENT_SELECTOR","getCustomAppendixBg","appendixBg","CUSTOM_APPENDIX_ATTRIBUTE","crossOrigin","forceAspectRatio","formatCurrency","InvoiceMediaPreview","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","PI","MOVE_THRESHOLD","PinSvg","cx","cy","Location","countdownRef","location","getMessageLocation","serverTime","isGeoLiveExpired","secondsBeforeEnd","period","point","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","lat","getMetersPerPixel","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","strokeDashOffset","formatCountdownShort","long","pinClassName","heading","getVenueColor","venueType","iconSrc","getVenueIconUrl","mapPin","renderPin","renderOverlay","formatLocationLastUpdate","editDate","renderInfo","MessageMeta","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","withFullDate","onTranslationClick","onEffectClick","onOpenThread","paidMessageStars","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","viewsCount","forwardsCount","repliesTitle","time","isImported","containerClassName","isVideoProcessingPending","MessagePhoneCall","phoneCall","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","PaidMediaOverlay","children","isClickable","isBought","starsAmount","getPercentage","total","toFixed","PollOption","answer","voteResults","totalVoters","maxVotersCount","correctResults","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","Poll","onSendVote","loadMessage","openPollResults","summary","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closed","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isPublic","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","hidden","quiz","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","solution","solutionEntities","question","getPollTypeString","CheckboxGroup","loadingOptions","isRound","RadioGroup","loadingOption","getReadableVotersCount","Sticker","withEffect","onStopEffect","effectRef","hasEffect","isMirrored","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","useOverlayPosition","anchorRef","overlayRef","openModal","isMemojiSticker","getStickerDimensions","fullMediaHash","fullMediaClassName","AnimatedSticker","onEnded","connectionState","BaseStory","lastReadId","selectPeerStories","targetUser","thumbUrl","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","activeReactions","loadingThread","withSenderName","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","isGroup","webPageStoryData","webPageStory","forceSenderName","isAnonymousOwnMessage","canShowSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","isChatPublic","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","focusedQuoteOffset","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","selectCanReplyToMessage","downloadableMedia","getMessageDownloadableMedia","commentsMessage","isInDocumentGroup","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","hasUnreadReaction","unreadReactions","hasTopicChip","messageTopic","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","appConfig","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","lastPlaybackTimestamp","selectMessageLastPlaybackTimestamp","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","shouldLoopStickers","selectShouldLoopStickers","defaultReaction","selectDefaultReaction","transcriptions","isPending","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","tags","savedReactionTags","Message","observeIntersectionForBottom","noComments","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","memoFirstUnreadIdRef","onIntersectPinnedMessage","disableContextMenuHint","animateUnreadReaction","markMentionsRead","bottomMarkerRef","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","contextMenuTarget","noAppearanceAnimation","markShown","MESSAGE_APPEARANCE_DELAY","useShowTransition","noMountTransition","viewportPinnedIdsToRemove","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","asForwarded","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isAlbum","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","avatarPeer","messageColorPeer","senderPeer","handleSenderClick","handleViaBotClick","handleReplyClick","handleMediaClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","openAudioPlayer","markMessagesRead","sendPollVote","openForwardMenu","searchChatMediaMessages","replyToTopId","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","albumMessageId","albumIndex","ScheduledAlbum","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasMultipleCaptions","captionMessage","hasTextContent","hasMessageText","hasUnreadMention","getIsReady","setLanguage","threshold","promise","request","detectLanguage","useTextLanguage","LimitedMap","previousMetadata","processMessageMetadata","useDetectChatLanguage","isTranslationPending","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","hasCommentCounter","hasCommentButton","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","gift","buildContentClassName","withAppendix","paidMessageStarsInMeta","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","getPeerFullTitle","canShowPostAuthor","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","noMediaCorners","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","MIN_MEDIA_WIDTH_WITH_TEXT","getMinMediaWidth","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","renderReactionsAndMeta","meta","Reactions","metaChildren","noRecentReactors","renderWebPage","backgroundEmojiId","onAudioPlay","onDocumentClick","onCancelMediaTransfer","renderInvertibleMediaContent","messageText","shouldRenderSenderName","renderForwardTitle","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","onCopy","onDoubleClick","onMouseMove","textContentClass","shouldReadMedia","RoundVideo","Story","StoryMention","footerClass","hasContentAfterText","isMetaInText","renderInvertedMediaContent","MessageAppendix","isOutside","targetHref","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","isForMessageEffect","effectClassName","isInWebPage","isPaidPreview","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","isSmall","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","defaultMuted","isPriority","onTimeUpdate","SponsoredContextMenu","sponsorInfo","canReport","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","SponsoredMessageContextMenuContainer","randomId","additionalInfo","onItemClick","openAboutAdsModal","reportSponsored","hideSponsored","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","handleReportSponsoredMessage","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","previewMediaHash","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","WebPageUniqueGift","stickerRef","backdrop","model","pattern","getGiftAttributes","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","openUrl","openTelegramLink","stickersRef","handleContainerClick","handleOpenTelegramLink","hasCustomColor","isWithTextColor","documents","linkTimestamp","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","isEmoji","quickButtonTitle","isArticle","isSquarePhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","shouldSkipModal","caption","isRectangular","noForcedUpperCase","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","selectCurrentChat","DeleteMemberModal","deleteChatMember","handleDeleteChatMember","textParts","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderBalanceCell","usdRate","integerTonPart","decimalTonPart","integerUsdPart","decimalUsdPart","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","effectSize","shouldPause","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","temperatureC","backgroundColor","convertToRGBA","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","handleMediaAreaClick","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","adminId","selectCanInviteToActiveGroupCall","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","interval","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","ms","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatMessagesRead","markChatUnread","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","useMarkScrolled","selector","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","Progressive","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","callback","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","channel","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","postMessageOnTickEnd","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","parseMessageKey","splitTrackId","messageKey","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","trackIdFilter","removeFromQueue","currentId","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","click","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","providerUrl","cos","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","cloneContents","caretRange","endContainer","endOffset","Node","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}